import {
  MarketplaceV3DirectListings,
  MarketplaceV3EnglishAuctions,
  MarketplaceV3Offers
} from "./chunk-XXU6U6RC.js";
import {
  assertEnabled
} from "./chunk-4FLJ7AXJ.js";
import "./chunk-4LQPSEYH.js";
import "./chunk-2NZDBK6Z.js";
import {
  ContractPlatformFee
} from "./chunk-PACA7OF2.js";
import {
  ContractInterceptor
} from "./chunk-JFA442KI.js";
import "./chunk-UDW4GHLE.js";
import "./chunk-IRG2K5IH.js";
import {
  ContractRoles
} from "./chunk-CX3L7LCT.js";
import {
  ContractAppURI,
  ContractEncoder,
  ContractEvents,
  ContractMetadata,
  GasCostEstimator,
  detectContractFeature
} from "./chunk-O3KLRFRE.js";
import {
  AbiSchema,
  ContractWrapper,
  FEATURE_DIRECT_LISTINGS,
  FEATURE_ENGLISH_AUCTIONS,
  FEATURE_OFFERS,
  MARKETPLACE_CONTRACT_ROLES,
  MarketplaceContractSchema,
  Transaction,
  require_bs58
} from "./chunk-PKZFZVQJ.js";
import {
  require_utils
} from "./chunk-TYGHEAKX.js";
import "./chunk-D7LH2CO4.js";
import "./chunk-EE55PL3Y.js";
import "./chunk-NBFJ3KHJ.js";
import "./chunk-DHMVYZV7.js";
import "./chunk-7DQHQEI5.js";
import "./chunk-UVXELCFU.js";
import {
  init_lib7 as init_lib
} from "./chunk-KC6NNU7E.js";
import "./chunk-C56U6TOF.js";
import "./chunk-OPAF3CF6.js";
import {
  require_bn
} from "./chunk-H3V7PHW7.js";
import "./chunk-HZQFHQLI.js";
import "./chunk-RW4LJ3ZA.js";
import "./chunk-YDRBHGWK.js";
import "./chunk-K6EL5C3Z.js";
import {
  init_shim
} from "./chunk-6E35MBRA.js";
import {
  __publicField,
  __toESM
} from "./chunk-IJ7IQSKN.js";

// node_modules/@thirdweb-dev/sdk/dist/marketplacev3-4c6e87bd.browser.esm.js
init_shim();
init_lib();
var import_bn = __toESM(require_bn());
var import_bs58 = __toESM(require_bs58());
var import_utils = __toESM(require_utils());
var _MarketplaceV3 = class {
  get directListings() {
    return assertEnabled(this.detectDirectListings(), FEATURE_DIRECT_LISTINGS);
  }
  get englishAuctions() {
    return assertEnabled(this.detectEnglishAuctions(), FEATURE_ENGLISH_AUCTIONS);
  }
  get offers() {
    return assertEnabled(this.detectOffers(), FEATURE_OFFERS);
  }
  get chainId() {
    return this._chainId;
  }
  constructor(network, address, storage) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    let abi = arguments.length > 4 ? arguments[4] : void 0;
    let chainId = arguments.length > 5 ? arguments[5] : void 0;
    let contractWrapper = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : new ContractWrapper(network, address, abi, options, storage);
    this._chainId = chainId;
    this.abi = AbiSchema.parse(abi || []);
    this.contractWrapper = contractWrapper;
    this.storage = storage;
    this.metadata = new ContractMetadata(this.contractWrapper, MarketplaceContractSchema, this.storage);
    this.app = new ContractAppURI(this.contractWrapper, this.metadata, this.storage);
    this.roles = new ContractRoles(this.contractWrapper, _MarketplaceV3.contractRoles);
    this.encoder = new ContractEncoder(this.contractWrapper);
    this.estimator = new GasCostEstimator(this.contractWrapper);
    this.events = new ContractEvents(this.contractWrapper);
    this.platformFees = new ContractPlatformFee(this.contractWrapper);
    this.interceptor = new ContractInterceptor(this.contractWrapper);
  }
  onNetworkUpdated(network) {
    this.contractWrapper.updateSignerOrProvider(network);
  }
  getAddress() {
    return this.contractWrapper.address;
  }
  async prepare(method, args, overrides) {
    return Transaction.fromContractWrapper({
      contractWrapper: this.contractWrapper,
      method,
      args,
      overrides
    });
  }
  async call(functionName, args, overrides) {
    return this.contractWrapper.call(functionName, args, overrides);
  }
  detectDirectListings() {
    if (detectContractFeature(this.contractWrapper, "DirectListings")) {
      return new MarketplaceV3DirectListings(this.contractWrapper, this.storage);
    }
    return void 0;
  }
  detectEnglishAuctions() {
    if (detectContractFeature(this.contractWrapper, "EnglishAuctions")) {
      return new MarketplaceV3EnglishAuctions(this.contractWrapper, this.storage);
    }
    return void 0;
  }
  detectOffers() {
    if (detectContractFeature(this.contractWrapper, "Offers")) {
      return new MarketplaceV3Offers(this.contractWrapper, this.storage);
    }
    return void 0;
  }
};
var MarketplaceV3 = _MarketplaceV3;
__publicField(MarketplaceV3, "contractRoles", MARKETPLACE_CONTRACT_ROLES);
export {
  MarketplaceV3
};
//# sourceMappingURL=marketplacev3-4c6e87bd.browser.esm-6SRSC4Y7.js.map
